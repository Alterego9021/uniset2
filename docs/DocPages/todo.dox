/*!
	\page ToDoPage Необходимо доделать

	-# утилиты мониторинга работы системы
	-# настройку "политик" для ORB сделать из конф. файла
	-# по максимуму переход на xml
	-# дополнить описание IOController-ов разделом про XML-файл заказчков(создание,работа)
	-# сделать описание принципов и деталей межобъектного взаимодействия
	(об ограничениях на размер сообщений, очередь сообщений, приоритеты и т.п.)
	-# попытатся сделать работу с сервисами более универсальной
	(что то типа "UniSetTypes::ObjectId conf->getService(const string name)" )
	-# откорректировать и дописать "общее описание" библиотеки
	-# сделать тип в UniSetObject::getType string-ом
	(для универсальности и простоты будущих расширений)
	-# переписать тестовые примеры, под текущую ситуацию.
	-# в будущем попытатся отказатся от ObjectId и перейти на строки
	-# перенести настройки размера очереди сообщений для UniSetObject-ов в конф.файл
	-# разработать API(на php), для web-интерфейса накопленной статистикики и журналов. 
	-# в InfoServer-е по routeList-у сообщения пересылаются, только если они локальные. 
	Надо переделать механизм, чтобы можно было отделять тех кому пересылать все сообщения,
	от тех кому пересылать только локальные....
	-# Для IOController-ов разработать спец. интерфейс для работы с датчиками (сохранение, получение состояния и т.п.)
		Для того, чтобы можно было использовать разные способы хранения (БД, STL-контейнеры, файлы и т.п.). Т.к. сейчас
	жёсткая реализация на STL-контейнерах.
	
	-# добавить в configure.ac ключ позволяющий отключать сборку(копилирование) документации
	-# дописать интерфейс для загрзуки списка сообщений из XML-файла
	-# утилиту генерирования по шаблону h и cc файлов для  Object, Controller, Manager...
	-# дописать AskDumper_XML1 (dump Threshold и т.п.)
	-# дописать Mutex как надо (или перейти на omni_mutex-ы) . Сделать RWMutex и RMutex.
	-# стартовые скрипты для локальной отладки (откорректировать старые)
	-# управление очередью сообщений, очистка по фильтру и т.п. (может перейти на несколько очередей по приоритетам)
	-# У NotifyController-а две функции с название calibrate (надо переименовать)
	-# Желательно встроить в SensorMessage информацию о калибровке (CalibrateInfo).
	-# В калибровку ввести "калибровочный" коэффициент. Необходимый для создания значений с плавающей точкой 
		(а сейчас у нас для аналоговых значений используется long).
		Т.е. например необходимо отображать значение 0-10 с точностью 0.02. Вводится калибровочный коэффициент равный 100.
		При калибровке minCal и maxCal _умножаются_ на 100, т.е. диапазон калибровки становится  0 - 1000.
		А при отображении полученное число _делится_ на 100 и приводится, например, к float. Для этого конечно желательно
		иметь в SensorMessage информацию о коэффициенте...

*/
  
